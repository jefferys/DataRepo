% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fsUtils.R
\name{groups}
\alias{groups}
\title{Get a user's groups}
\usage{
groups(user = NULL, unsafe = FALSE)
}
\arguments{
\item{user}{The name of the user to check groups for. By default this is
\code{NULL} and the groups will be provided for the user calling the
function. Providing this parameter can be unsafe if you don't trust the
source of the user name as much as you trust the source of your R code. It
will be ignored (with a warning) unless \code{unsafe= TRUE} is set.}

\item{unsafe}{Set \code{TRUE} to allow use of the \code{user=} parameter.
Doing so without knowing that the user name is valid \emph{is} unsafe.}
}
\value{
The vector of group names to which the user belongs.
}
\description{
Get a user's groups
}
\section{Possible Errors}{


\describe{
   \item{\command{
"System command failed with status <status>
 Command was: groups <user>
 The system-level error message (if any) was: ..."}}{
      Failure of the system command is caught and reported. E.g. if there
      \emph{is} no system level \code{groups} command.
   }
   \item{\command{
   	"groups() is only implemented for unix systems"
   }}{
      Will die with error if .Platform$OS.type != 'unix'.
   }
}
}

\section{Possible Warnings}{


\describe{
   \item{\command{"User '<user>' ignored; potentially unsafe."}}{
      As described above, you must explicitly allow use of the user parameter
      by agreeing to run this is an \code{unsafe= TRUE} way.
   }
}
}
\examples{
groups()
groups( user='root' )  # user ignored, caller's user name used.
groups( user='root', unsafe=TRUE )

# Example of unsafe use.
groups( user=';ls', unsafe=TRUE )
# Imagine if instead of ';ls' an evil user force-deleted, recursive on /
# and R itself ran as root (as it might be poorly configured to do to
# access some secure files...)

}

